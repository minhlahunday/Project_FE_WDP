import React, { useState } from 'react';
import { Card, Typography, Button, Space, Row, Col, Alert, Divider } from 'antd';
import { 
  CreditCardOutlined, 
  BankOutlined, 
  FilePdfOutlined, 
  DollarOutlined,
  CheckCircleOutlined,
  ClockCircleOutlined
} from '@ant-design/icons';

import { PaymentManagement } from './PaymentManagement';
import { BankProfileModal } from './BankProfileModal';
import { DebtTracking } from './DebtTracking';

const { Title, Text, Paragraph } = Typography;

interface PaymentFeaturesDemoProps {}

export const PaymentFeaturesDemo: React.FC<PaymentFeaturesDemoProps> = () => {
  const [showPaymentModal, setShowPaymentModal] = useState(false);
  const [showBankProfileModal, setShowBankProfileModal] = useState(false);
  const [showDebtTracking, setShowDebtTracking] = useState(false);

  // Mock order data
  const mockOrder = {
    _id: 'demo-order-001',
    code: 'ORD-DEMO-001',
    customer_id: 'CUST-001',
    customer: { full_name: 'Nguy·ªÖn VƒÉn A' },
    dealership_id: 'DEALER-001',
    salesperson_id: 'STAFF-001',
    items: [
      {
        vehicle_id: 'VH-001',
        vehicle: { name: 'VinFast VF8', model: 'VF8 Plus' },
        quantity: 1,
        final_amount: 139806000
      }
    ],
    final_amount: 139806000,
    paid_amount: 0,
    payment_method: 'installment',
    status: 'confirmed',
    delivery: {
      address: '123 ƒê∆∞·ªùng ABC, Qu·∫≠n 1, TP.HCM',
      phone: '0901234567'
    },
    contract: {
      signed: false,
      signed_at: null
    },
    notes: 'ƒê∆°n h√†ng demo ƒë·ªÉ test t√≠nh nƒÉng thanh to√°n',
    is_deleted: false,
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString()
  };

  const features = [
    {
      id: 1,
      title: 'Ghi nh·∫≠n thanh to√°n',
      description: 'H·ªó tr·ª£ c·ªçc, tr·∫£ th·∫≥ng, tr·∫£ g√≥p qua ng√¢n h√†ng',
      icon: <CreditCardOutlined className="text-2xl text-blue-500" />,
      status: '‚úÖ Ho√†n th√†nh',
      details: [
        '‚Ä¢ Ti·ªÅn m·∫∑t',
        '‚Ä¢ Chuy·ªÉn kho·∫£n ng√¢n h√†ng', 
        '‚Ä¢ QR Code',
        '‚Ä¢ Th·∫ª t√≠n d·ª•ng',
        '‚Ä¢ Tr·∫£ g√≥p qua ng√¢n h√†ng'
      ],
      action: () => setShowPaymentModal(true),
      actionText: 'Demo Thanh to√°n'
    },
    {
      id: 2,
      title: 'G·ª≠i h·ªì s∆° ng√¢n h√†ng',
      description: 'Upload t√†i li·ªáu cho tr·∫£ g√≥p qua ng√¢n h√†ng',
      icon: <BankOutlined className="text-2xl text-green-500" />,
      status: '‚úÖ Ho√†n th√†nh',
      details: [
        '‚Ä¢ Th√¥ng tin t√†i kho·∫£n ng√¢n h√†ng',
        '‚Ä¢ Upload CMND/CCCD',
        '‚Ä¢ Sao k√™ ng√¢n h√†ng',
        '‚Ä¢ H·ª£p ƒë·ªìng tr·∫£ g√≥p',
        '‚Ä¢ Tr·∫°ng th√°i duy·ªát h·ªì s∆°'
      ],
      action: () => setShowBankProfileModal(true),
      actionText: 'Demo H·ªì s∆° ng√¢n h√†ng'
    },
    {
      id: 3,
      title: 'Theo d√µi tr·∫°ng th√°i thanh to√°n',
      description: 'Real-time tracking tr·∫°ng th√°i ƒë∆°n h√†ng',
      icon: <ClockCircleOutlined className="text-2xl text-orange-500" />,
      status: '‚úÖ Ho√†n th√†nh',
      details: [
        '‚Ä¢ Progress bar thanh to√°n',
        '‚Ä¢ L·ªãch s·ª≠ thanh to√°n chi ti·∫øt',
        '‚Ä¢ C·∫≠p nh·∫≠t tr·∫°ng th√°i real-time',
        '‚Ä¢ Th√¥ng b√°o tr·∫°ng th√°i',
        '‚Ä¢ Audit trail'
      ],
      action: () => setShowPaymentModal(true),
      actionText: 'Demo Tracking'
    },
    {
      id: 4,
      title: 'Xu·∫•t h√≥a ƒë∆°n PDF',
      description: 'T·ª± ƒë·ªông t·∫°o h√≥a ƒë∆°n khi thanh to√°n ƒë·ªß',
      icon: <FilePdfOutlined className="text-2xl text-red-500" />,
      status: '‚úÖ Ho√†n th√†nh',
      details: [
        '‚Ä¢ T·ª± ƒë·ªông t·∫°o khi thanh to√°n ƒë·ªß',
        '‚Ä¢ Download PDF v·ªÅ m√°y',
        '‚Ä¢ T√™n file theo m√£ ƒë∆°n h√†ng',
        '‚Ä¢ Th√¥ng tin ƒë·∫ßy ƒë·ªß kh√°ch h√†ng',
        '‚Ä¢ Ch·ªØ k√Ω s·ªë'
      ],
      action: () => setShowPaymentModal(true),
      actionText: 'Demo H√≥a ƒë∆°n'
    },
    {
      id: 5,
      title: 'Theo d√µi c√¥ng n·ª£',
      description: 'Dashboard qu·∫£n l√Ω c√¥ng n·ª£ to√†n di·ªán',
      icon: <DollarOutlined className="text-2xl text-purple-500" />,
      status: '‚úÖ Ho√†n th√†nh',
      details: [
        '‚Ä¢ Th·ªëng k√™ t·ªïng c√¥ng n·ª£',
        '‚Ä¢ ƒê√£ thanh to√°n vs c√≤n l·∫°i',
        '‚Ä¢ C√¥ng n·ª£ qu√° h·∫°n',
        '‚Ä¢ Progress tracking',
        '‚Ä¢ Filter & search'
      ],
      action: () => setShowDebtTracking(true),
      actionText: 'Demo C√¥ng n·ª£'
    },
    {
      id: 6,
      title: 'C·∫≠p nh·∫≠t tr·∫°ng th√°i ƒë∆°n h√†ng',
      description: 'Auto update status d·ª±a tr√™n thanh to√°n',
      icon: <CheckCircleOutlined className="text-2xl text-green-600" />,
      status: '‚úÖ Ho√†n th√†nh',
      details: [
        '‚Ä¢ confirmed ‚Üí halfPayment',
        '‚Ä¢ halfPayment ‚Üí fullyPayment',
        '‚Ä¢ Auto status transitions',
        '‚Ä¢ Status logging',
        '‚Ä¢ Notification system'
      ],
      action: () => setShowPaymentModal(true),
      actionText: 'Demo Status Update'
    }
  ];

  return (
    <div className="p-6 bg-gray-50 min-h-screen">
      <div className="max-w-7xl mx-auto">
        {/* Header */}
        <div className="text-center mb-8">
          <Title level={1} className="text-4xl font-bold text-gray-800 mb-4">
            üéØ H·ªá Th·ªëng Thanh To√°n VinFast EVM
          </Title>
          <Paragraph className="text-lg text-gray-600 max-w-3xl mx-auto">
            T·∫•t c·∫£ 6 t√≠nh nƒÉng thanh to√°n ƒë√£ ƒë∆∞·ª£c implement ƒë·∫ßy ƒë·ªß v√† s·∫µn s√†ng s·ª≠ d·ª•ng.
            Click v√†o c√°c n√∫t "Demo" ƒë·ªÉ xem chi ti·∫øt t·ª´ng t√≠nh nƒÉng.
          </Paragraph>
        </div>

        {/* Status Alert */}
        <Alert
          message="‚úÖ T·∫•t C·∫£ T√≠nh NƒÉng ƒê√£ Ho√†n Th√†nh"
          description="H·ªá th·ªëng thanh to√°n ƒë√£ ƒë∆∞·ª£c t√≠ch h·ª£p ƒë·∫ßy ƒë·ªß v·ªõi backend API v√† c√≥ UI/UX chuy√™n nghi·ªáp."
          type="success"
          showIcon
          className="mb-8"
        />

        {/* Features Grid */}
        <Row gutter={[24, 24]}>
          {features.map((feature) => (
            <Col xs={24} md={12} lg={8} key={feature.id}>
              <Card
                hoverable
                className="h-full border-2 border-gray-200 hover:border-blue-300 transition-all duration-300"
                bodyStyle={{ padding: '24px' }}
              >
                <div className="text-center mb-4">
                  {feature.icon}
                  <Title level={4} className="mt-3 mb-2">
                    {feature.title}
                  </Title>
                  <Text type="secondary" className="block mb-3">
                    {feature.description}
                  </Text>
                  <div className="inline-block px-3 py-1 bg-green-100 text-green-800 rounded-full text-sm font-medium mb-4">
                    {feature.status}
                  </div>
                </div>

                <Divider />

                <div className="mb-4">
                  <Text strong className="block mb-2">T√≠nh nƒÉng:</Text>
                  <ul className="text-sm text-gray-600 space-y-1">
                    {feature.details.map((detail, index) => (
                      <li key={index}>{detail}</li>
                    ))}
                  </ul>
                </div>

                <Button
                  type="primary"
                  block
                  onClick={feature.action}
                  className="mt-4"
                >
                  {feature.actionText}
                </Button>
              </Card>
            </Col>
          ))}
        </Row>

        {/* Technical Details */}
        <Card className="mt-8" title="üîß Chi Ti·∫øt K·ªπ Thu·∫≠t">
          <Row gutter={[16, 16]}>
            <Col xs={24} md={12}>
              <Title level={5}>Frontend Components:</Title>
              <ul className="text-sm space-y-1">
                <li>‚Ä¢ PaymentManagement.tsx - X·ª≠ l√Ω thanh to√°n</li>
                <li>‚Ä¢ BankProfileModal.tsx - H·ªì s∆° ng√¢n h√†ng</li>
                <li>‚Ä¢ DebtTracking.tsx - Theo d√µi c√¥ng n·ª£</li>
                <li>‚Ä¢ PaymentManagementPage.tsx - Trang ch√≠nh</li>
                <li>‚Ä¢ paymentService.ts - API service</li>
              </ul>
            </Col>
            <Col xs={24} md={12}>
              <Title level={5}>Backend APIs:</Title>
              <ul className="text-sm space-y-1">
                <li>‚Ä¢ POST /api/payments - T·∫°o thanh to√°n</li>
                <li>‚Ä¢ GET /api/payments/order/:id - L·ªãch s·ª≠</li>
                <li>‚Ä¢ POST /api/bank-profiles - H·ªì s∆° ng√¢n h√†ng</li>
                <li>‚Ä¢ GET /api/debts/customer/:id - C√¥ng n·ª£</li>
                <li>‚Ä¢ POST /api/orders/:id/generate-invoice - H√≥a ƒë∆°n</li>
              </ul>
            </Col>
          </Row>
        </Card>
      </div>

      {/* Modals */}
      <PaymentManagement
        visible={showPaymentModal}
        order={mockOrder}
        onClose={() => setShowPaymentModal(false)}
        onSuccess={() => {
          setShowPaymentModal(false);
          // Show success message
        }}
      />

      <BankProfileModal
        visible={showBankProfileModal}
        order={mockOrder}
        onClose={() => setShowBankProfileModal(false)}
        onSuccess={() => {
          setShowBankProfileModal(false);
          // Show success message
        }}
      />

      {showDebtTracking && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
          <div className="bg-white rounded-lg max-w-6xl w-full max-h-[90vh] overflow-auto">
            <div className="p-4 border-b flex justify-between items-center">
              <Title level={4} className="!mb-0">Theo D√µi C√¥ng N·ª£</Title>
              <Button onClick={() => setShowDebtTracking(false)}>ƒê√≥ng</Button>
            </div>
            <div className="p-4">
              <DebtTracking />
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default PaymentFeaturesDemo;
